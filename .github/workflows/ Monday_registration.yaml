name: Pickleball Registration
permissions:
  contents: write
on:
  schedule:
    - cron: '35 5 * * 1' # 23:35 Calgary (summer) Sunday 05:35 UTC Monday
    - cron: '45 5 * * 1'
    - cron: '55 5 * * 1'
env:
  TARGET_DATE: "13-Oct-25"
  TARGET_TIME: "10:30"
jobs:
  register:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 1
      
      - name: Git setup and fetch tags
        run: |
          git config user.name "bot"
          git config user.email "bot@github.com"
          git fetch --tags
      
      - name: Check tag & timing
        id: check
        run: |
          tag="success_$TARGET_DATE"
          if git tag -l | grep -q "^${tag}$"; then
            echo "🏷️ Success tag already exists: $tag"
            echo "exists=true" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          current_hour=$((10#$(date -u +%H)))
          current_minute=$((10#$(date -u +%M)))
          current_second=$((10#$(date -u +%S)))
          
          current_total_seconds=$(( (current_hour * 3600) + (current_minute * 60) + current_second ))
          target_total_seconds=$(( 6 * 3600 ))  # 6:00:00 UTC = midnight Calgary
          
          diff_seconds=$(( target_total_seconds - current_total_seconds ))
          
          if [ $diff_seconds -gt 600 ]; then
            echo "❌ Too early: $diff_seconds seconds (> 10 min)"
            exit 1
          elif [ $diff_seconds -gt 0 ]; then
            echo "⌛ Sleeping for $diff_seconds seconds"
            sleep $diff_seconds
          fi
          
          echo "exists=false" >> $GITHUB_OUTPUT
      
      - name: Register
        id: registration
        if: steps.check.outputs.exists == 'false'
        uses: devcontainers/ci@v0.3
        env:
          YOUR_SECRET_EMAIL: ${{ secrets.YOUR_SECRET_EMAIL }}
          YOUR_SECRET_PASSWORD: ${{ secrets.YOUR_SECRET_PASSWORD }}
          YOUR_SECRET_LOGON_URL: ${{ secrets.YOUR_SECRET_LOGON_URL }}
          YOUR_SECRET_PLANNING_URL: ${{ secrets.YOUR_SECRET_PLANNING_URL }}
          YOUR_SECRET_LOGIN_URL: ${{ secrets.YOUR_SECRET_LOGIN_URL }}
          YOUR_SECRET_MY_NAME: ${{ secrets.YOUR_SECRET_MY_NAME }}
        with:
          runCmd: |
            FINAL_CODE=1
            for i in {1..3}; do
              python3 execution.py "$TARGET_DATE" "$TARGET_TIME"
              EXIT_CODE=$?
              if [ $EXIT_CODE -eq 0 ]; then
                FINAL_CODE=0
                break
              fi
              [ $i -lt 3 ] && sleep 30
            done
            echo "PYTHON_EXIT_CODE=$FINAL_CODE" >> $GITHUB_ENV
            exit 0
          push: never
      
      - name: Tag success
        if: steps.check.outputs.exists == 'false' && env.PYTHON_EXIT_CODE == '0'
        run: |
          tag="success_$TARGET_DATE"
          git commit --allow-empty -m "✅ $tag"
          git tag "$tag"
          git push origin HEAD "$tag"