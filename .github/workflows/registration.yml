name: Registration Pickleball Saturday

permissions:
  contents: write
  actions: read

on:
  # Multiple schedule options - you can enable/disable by commenting/uncommenting
  schedule:
    # Monday at 12:00 PM Calgary time (summer MDT)
    # - cron: '0 18 * * 1'
    # Monday at 12:00 PM Calgary time (winter MST) - uncomment when needed
    # - cron: '0 19 * * 1'
    
    # Additional common times (all for Mondays, Calgary time):
    # - cron: '0 17 * * 1'  # 11:00 AM Calgary (summer)
    # - cron: '0 19 * * 1'  # 1:00 PM Calgary (summer)
    # - cron: '0 20 * * 1'  # 2:00 PM Calgary (summer)
    # - cron: '30 19 * * 1'  # 1:30 PM Calgary (summer) Monday
    
     - cron: '0 5 * * 6'  # 00:05 AM Calgary (summer) Saturday
     - cron: '15 5 * * 6'  # 00:05 AM Calgary (summer) Saturday
     - cron: '30 5 * * 6'  # 00:05 AM Calgary (summer) Saturday
     - cron: '45 5 * * 6'  # 00:05 AM Calgary (summer) Saturday

    # - cron: '5 6 * * 0'  # 00:05 AM Calgary (summer) Dimanche
    # - cron: '5 7 * * 0'   # Sunday 00:05 Calgary (winter)
     - cron: '0 6 * * 6'  # 00:05 AM Calgary (summer) Saturday



    
  # Manual trigger with customizable parameters
  workflow_dispatch:
    inputs:
      target_date:
        description: 'Target date (format: DD-MMM-YY, e.g., 19-Aug-25)'
        required: true
        default: '15-Sep-25'
        type: string
      target_time:
        description: 'Target time (format: H:MM or HH:MM, e.g., 4:30 or 14:30)'
        required: true
        default: '8:00'
        type: string

# Default values for automatic executions
env:
  DEFAULT_DATE: "20-Sep-25"
  DEFAULT_TIME: "8:30"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 1


      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

        
      - name: Set parameters
        id: params
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "date=${{ github.event.inputs.target_date }}" >> $GITHUB_OUTPUT
            echo "time=${{ github.event.inputs.target_time }}" >> $GITHUB_OUTPUT
            echo "trigger_type=manual" >> $GITHUB_OUTPUT
            echo "environment=manual" >> $GITHUB_OUTPUT
          else
            echo "date=${{ env.DEFAULT_DATE }}" >> $GITHUB_OUTPUT
            echo "time=${{ env.DEFAULT_TIME }}" >> $GITHUB_OUTPUT
            echo "trigger_type=scheduled" >> $GITHUB_OUTPUT
            echo "environment=scheduled" >> $GITHUB_OUTPUT
          fi
    
      - name: Check if success tag already exists
        id: tag_check
        run: |
          target_date="${{ steps.params.outputs.date }}"
          tag_name="success_${target_date}"
          
          if git tag -l | grep -q "^${tag_name}$"; then
            echo "tag_exists=true" >> $GITHUB_OUTPUT
            echo "üè∑Ô∏è Success tag already exists: $tag_name"
          else
            echo "tag_exists=false" >> $GITHUB_OUTPUT
            echo "üè∑Ô∏è Success tag does not exist: $tag_name"
          fi
        
      - name: Display execution info
        if: steps.tag_check.outputs.tag_exists == 'false'

        run: |
          echo "üéæ Monday Pickleball Registration"
          echo "üìÖ Date: ${{ steps.params.outputs.date }}"
          echo "üïê Time: ${{ steps.params.outputs.time }}"
          echo "üîÑ Trigger: ${{ steps.params.outputs.trigger_type }}"
          echo "üåç Environment: ${{ steps.params.outputs.environment }}"

      - name: Run Python test in devcontainer
        if: steps.tag_check.outputs.tag_exists == 'false'

        uses: devcontainers/ci@v0.3
        env:
          YOUR_SECRET_EMAIL: ${{ secrets.YOUR_SECRET_EMAIL }}
          YOUR_SECRET_PASSWORD: ${{ secrets.YOUR_SECRET_PASSWORD }}
          YOUR_SECRET_LOGON_URL: ${{ secrets.YOUR_SECRET_LOGON_URL }}
          YOUR_SECRET_PLANNING_URL: ${{ secrets.YOUR_SECRET_PLANNING_URL }}
          YOUR_SECRET_LOGIN_URL: ${{ secrets.YOUR_SECRET_LOGIN_URL }}
          YOUR_SECRET_MY_NAME: ${{ secrets.YOUR_SECRET_MY_NAME }}
          # Additional environment variables
          EXECUTION_ENVIRONMENT: ${{ steps.params.outputs.environment }}
          TRIGGER_TYPE: ${{ steps.params.outputs.trigger_type }}
        with:
          runCmd: python3 execution.py "${{ steps.params.outputs.date }}" "${{ steps.params.outputs.time }}"
          push: never


      - name: Create success tag if registration succeeded
        run: |
          target_date="${{ steps.params.outputs.date }}"
          
          if [ "${PYTHON_EXIT_CODE:-1}" = "0" ]; then
            echo "‚úÖ Registration succeeded"
            
            tag_name="success_${target_date}"
            
            git commit --allow-empty -m "‚úÖ Registration succeeded for ${target_date}"
            git tag -a "$tag_name" -m "Registration success for ${target_date} - $(date -u)"
            git push origin ${{ github.ref_name }}
            git push origin "$tag_name"
            
            echo "üè∑Ô∏è Success tag created: $tag_name"
          else
            echo "‚ùå Registration failed (exit code: ${PYTHON_EXIT_CODE:-unknown})"
          fi