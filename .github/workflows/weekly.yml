name: Registration Pickleball

on:
  schedule:
    # Saturday 00:05 Calgary (summer MDT: UTC-6)
     #- cron: '5 6 * * 6'
    # Sunday 00:05 Calgary (summer MDT: UTC-6)  
     - cron: '53 5 * * 0'
     - cron: '58 5 * * 0'
     - cron: '1 6 * * 0'

    # Monday 00:01 Calgary (summer MDT: UTC-6)  
     - cron: '50 5 * * 1'
    # Monday 00:01 Calgary (summer MDT: UTC-6)  
     - cron: '1 6 * * 1'
    # Wednesday 00:05 Calgary (summer MDT: UTC-6)  
    # try Tuesday 23:55 UTC (5:55 PM Calgary summer)
    # - cron: '55 5 * * 2'
    # Wednesday registration 00:01 Calgary (summer MDT: UTC-6)  
     - cron: '51 5 * * 3'
     - cron: '56 5 * * 3'
     - cron: '1 6 * * 3'
    
  workflow_dispatch:
    inputs:
      target_date:
        description: 'Target date (format: DD-MMM-YY, e.g., 19-Aug-25)'
        required: true
        default: '19-Aug-25'
        type: string
      target_time:
        description: 'Target time Calgary (format: H:MM or HH:MM, e.g., 12:00)'
        required: true
        default: '12:00'
        type: string
      job_type:
        description: 'Job type for manual runs'
        required: false
        default: 'manual'
        type: choice
        options:
          - manual
          - monday
          - sunday
          - wednesday

env:
  # Dates and times to update regularly
  MONDAY_DATE: "15-Sep-25"
  MONDAY_TIME: "4:15"
  SUNDAY_DATE: "21-Sep-25"
  SUNDAY_TIME: "9:00"
  WEDNESDAY_DATE: "17-Sep-25"
  WEDNESDAY_TIME: "6:30"
  # Default for manual runs
  DEFAULT_DATE: "19-Aug-25"
  DEFAULT_TIME: "12:00"

jobs:
  # Job for Monday scheduled runs
  monday-registration:
    if: contains(fromJson('["40 5 * * 1","50 5 * * 1","1 6 * * 1"]'),github.event.schedule) || (github.event_name == 'workflow_dispatch' && github.event.inputs.job_type == 'monday')
    runs-on: ubuntu-latest
    name: Monday Registration (00:01 Calgary)
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
         token: ${{ secrets.GITHUB_TOKEN }}
         fetch-depth: 1  # Fetch dernier commit only
      
      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
        
      - name: Set parameters for Monday
        id: params
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "date=${{ github.event.inputs.target_date }}" >> $GITHUB_OUTPUT
            echo "time=${{ github.event.inputs.target_time }}" >> $GITHUB_OUTPUT
            echo "trigger_type=manual" >> $GITHUB_OUTPUT
            echo "environment=monday-manual" >> $GITHUB_OUTPUT
          else
            # Use environment variables for easy updates
            echo "date=${{ env.MONDAY_DATE }}" >> $GITHUB_OUTPUT
            echo "time=${{ env.MONDAY_TIME }}" >> $GITHUB_OUTPUT
            echo "trigger_type=scheduled" >> $GITHUB_OUTPUT
            echo "environment=monday-auto" >> $GITHUB_OUTPUT
          fi
          echo "job_day=monday" >> $GITHUB_OUTPUT
      - name: Check if success tag already exists
        id: tag_check
        run: |
          target_date="${{ steps.params.outputs.date }}"
          tag_name="success_${target_date}"
          
          if git tag -l | grep -q "^${tag_name}$"; then
            echo "tag_exists=true" >> $GITHUB_OUTPUT
            echo "🏷️ Success tag already exists: $tag_name"
          else
            echo "tag_exists=false" >> $GITHUB_OUTPUT
            echo "🏷️ Success tag does not exist: $tag_name"
          fi
    
      - name: Display execution info
        if: steps.tag_check.outputs.tag_exists == 'false'

        run: |
          echo "🎾 Monday Pickleball Registration"
          echo "📅 Date: ${{ steps.params.outputs.date }}"
          echo "🕐 Time: ${{ steps.params.outputs.time }}"
          echo "🔄 Trigger: ${{ steps.params.outputs.trigger_type }}"
          echo "🌍 Environment: ${{ steps.params.outputs.environment }}"
          
      - name: Run Monday registration
        if: steps.tag_check.outputs.tag_exists == 'false'

        uses: devcontainers/ci@v0.3
        env:
          YOUR_SECRET_EMAIL: ${{ secrets.YOUR_SECRET_EMAIL }}
          YOUR_SECRET_PASSWORD: ${{ secrets.YOUR_SECRET_PASSWORD }}
          YOUR_SECRET_LOGON_URL: ${{ secrets.YOUR_SECRET_LOGON_URL }}
          YOUR_SECRET_PLANNING_URL: ${{ secrets.YOUR_SECRET_PLANNING_URL }}
          YOUR_SECRET_LOGIN_URL: ${{ secrets.YOUR_SECRET_LOGIN_URL }}
          YOUR_SECRET_MY_NAME: ${{ secrets.YOUR_SECRET_MY_NAME }}
          EXECUTION_ENVIRONMENT: ${{ steps.params.outputs.environment }}
          TRIGGER_TYPE: ${{ steps.params.outputs.trigger_type }}
          JOB_DAY: ${{ steps.params.outputs.job_day }}
        with:
          runCmd: |
            python3 execution.py "${{ steps.params.outputs.date }}" "${{ steps.params.outputs.time }}"
            echo "PYTHON_EXIT_CODE=$?" >> $GITHUB_ENV
          push: never


      - name: Create success tag if registration succeeded
        if: steps.tag_check.outputs.tag_exists == 'false'

        run: |
          target_date="${{ steps.params.outputs.date }}"
          
          # Check if Python exited with code 0
          if [ "${PYTHON_EXIT_CODE:-1}" = "0" ]; then
            echo "✅ Python script succeeded (exit code 0)"
            
            # Create success tag from target_date
            tag_name="success_${target_date}"
            
            # Create empty commit for the tag
            git commit --allow-empty -m "✅ Monday registration succeeded for ${target_date}"
            
            # Create and push tag
            git tag -a "$tag_name" -m "Monday registration success for ${target_date} - $(date -u)"
            git push origin ${{ github.ref_name }}
            git push origin "$tag_name"
            
            echo "🏷️ Success tag created: $tag_name"
          else
            echo "❌ Python script failed (exit code: ${PYTHON_EXIT_CODE:-unknown})"
            echo "No success tag will be created"
          fi

# Job for Wednesday scheduled runs
  wednesday-registration:
    if: contains(fromJson('["51 5 * * 3","56 5 * * 3","1 6 * * 3"]'),github.event.schedule) || (github.event_name == 'workflow_dispatch' && github.event.inputs.job_type == 'wednesday')
    runs-on: ubuntu-latest
    name: Wednesday Registration (00:01 Calgary)
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
         token: ${{ secrets.GITHUB_TOKEN }}
         fetch-depth: 1  # Fetch dernier commit only
      
      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
        
      - name: Set parameters for Wednesday
        id: params
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "date=${{ github.event.inputs.target_date }}" >> $GITHUB_OUTPUT
            echo "time=${{ github.event.inputs.target_time }}" >> $GITHUB_OUTPUT
            echo "trigger_type=manual" >> $GITHUB_OUTPUT
            echo "environment=wednesday-manual" >> $GITHUB_OUTPUT
          else
            # Use environment variables for easy updates
            echo "date=${{ env.WEDNESDAY_DATE }}" >> $GITHUB_OUTPUT
            echo "time=${{ env.WEDNESDAY_TIME }}" >> $GITHUB_OUTPUT
            echo "trigger_type=scheduled" >> $GITHUB_OUTPUT
            echo "environment=wednesday-auto" >> $GITHUB_OUTPUT
          fi
          echo "job_day=wednesday" >> $GITHUB_OUTPUT
      - name: Check if success tag already exists
        id: tag_check
        run: |
          target_date="${{ steps.params.outputs.date }}"
          tag_name="success_${target_date}"
          
          if git tag -l | grep -q "^${tag_name}$"; then
            echo "tag_exists=true" >> $GITHUB_OUTPUT
            echo "🏷️ Success tag already exists: $tag_name"
          else
            echo "tag_exists=false" >> $GITHUB_OUTPUT
            echo "🏷️ Success tag does not exist: $tag_name"
          fi
    
      - name: Display execution info
        if: steps.tag_check.outputs.tag_exists == 'false'

        run: |
          echo "🎾 Wednesday Pickleball Registration"
          echo "📅 Date: ${{ steps.params.outputs.date }}"
          echo "🕐 Time: ${{ steps.params.outputs.time }}"
          echo "🔄 Trigger: ${{ steps.params.outputs.trigger_type }}"
          echo "🌍 Environment: ${{ steps.params.outputs.environment }}"
          
      - name: Run Wednesday registration
        if: steps.tag_check.outputs.tag_exists == 'false'

        uses: devcontainers/ci@v0.3
        env:
          YOUR_SECRET_EMAIL: ${{ secrets.YOUR_SECRET_EMAIL }}
          YOUR_SECRET_PASSWORD: ${{ secrets.YOUR_SECRET_PASSWORD }}
          YOUR_SECRET_LOGON_URL: ${{ secrets.YOUR_SECRET_LOGON_URL }}
          YOUR_SECRET_PLANNING_URL: ${{ secrets.YOUR_SECRET_PLANNING_URL }}
          YOUR_SECRET_LOGIN_URL: ${{ secrets.YOUR_SECRET_LOGIN_URL }}
          YOUR_SECRET_MY_NAME: ${{ secrets.YOUR_SECRET_MY_NAME }}
          EXECUTION_ENVIRONMENT: ${{ steps.params.outputs.environment }}
          TRIGGER_TYPE: ${{ steps.params.outputs.trigger_type }}
          JOB_DAY: ${{ steps.params.outputs.job_day }}
        with:
          runCmd: |
            python3 execution.py "${{ steps.params.outputs.date }}" "${{ steps.params.outputs.time }}"
            echo "PYTHON_EXIT_CODE=$?" >> $GITHUB_ENV
          push: never


      - name: Create success tag if registration succeeded
        if: steps.tag_check.outputs.tag_exists == 'false'

        run: |
          target_date="${{ steps.params.outputs.date }}"
          
          # Check if Python exited with code 0
          if [ "${PYTHON_EXIT_CODE:-1}" = "0" ]; then
            echo "✅ Python script succeeded (exit code 0)"
            
            # Create success tag from target_date
            tag_name="success_${target_date}"
            
            # Create empty commit for the tag
            git commit --allow-empty -m "✅ Wednesday registration succeeded for ${target_date}"
            
            # Create and push tag
            git tag -a "$tag_name" -m "Wednesday registration success for ${target_date} - $(date -u)"
            git push origin ${{ github.ref_name }}
            git push origin "$tag_name"
            
            echo "🏷️ Success tag created: $tag_name"
          else
            echo "❌ Python script failed (exit code: ${PYTHON_EXIT_CODE:-unknown})"
            echo "No success tag will be created"
          fi

# Job for Sunday scheduled runs
  sunday-registration:
    if: contains(fromJson('["53 5 * * 0","58 5 * * 0","1 6 * * 0"]'),github.event.schedule) || (github.event_name == 'workflow_dispatch' && github.event.inputs.job_type == 'sunday')
    runs-on: ubuntu-latest
    name: Wednesday Registration (00:01 Calgary)
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
         token: ${{ secrets.GITHUB_TOKEN }}
         fetch-depth: 1  # Fetch dernier commit only
      
      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
        
      - name: Set parameters for Wednesday
        id: params
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "date=${{ github.event.inputs.target_date }}" >> $GITHUB_OUTPUT
            echo "time=${{ github.event.inputs.target_time }}" >> $GITHUB_OUTPUT
            echo "trigger_type=manual" >> $GITHUB_OUTPUT
            echo "environment=sunday-manual" >> $GITHUB_OUTPUT
          else
            # Use environment variables for easy updates
            echo "date=${{ env.SUNDAY_DATE }}" >> $GITHUB_OUTPUT
            echo "time=${{ env.SUNDAY_TIME }}" >> $GITHUB_OUTPUT
            echo "trigger_type=scheduled" >> $GITHUB_OUTPUT
            echo "environment=sunday-auto" >> $GITHUB_OUTPUT
          fi
          echo "job_day=sunday" >> $GITHUB_OUTPUT
      - name: Check if success tag already exists
        id: tag_check
        run: |
          target_date="${{ steps.params.outputs.date }}"
          tag_name="success_${target_date}"
          
          if git tag -l | grep -q "^${tag_name}$"; then
            echo "tag_exists=true" >> $GITHUB_OUTPUT
            echo "🏷️ Success tag already exists: $tag_name"
          else
            echo "tag_exists=false" >> $GITHUB_OUTPUT
            echo "🏷️ Success tag does not exist: $tag_name"
          fi
    
      - name: Display execution info
        if: steps.tag_check.outputs.tag_exists == 'false'

        run: |
          echo "🎾 Sunday Pickleball Registration"
          echo "📅 Date: ${{ steps.params.outputs.date }}"
          echo "🕐 Time: ${{ steps.params.outputs.time }}"
          echo "🔄 Trigger: ${{ steps.params.outputs.trigger_type }}"
          echo "🌍 Environment: ${{ steps.params.outputs.environment }}"
          
      - name: Run Sunday registration
        if: steps.tag_check.outputs.tag_exists == 'false'

        uses: devcontainers/ci@v0.3
        env:
          YOUR_SECRET_EMAIL: ${{ secrets.YOUR_SECRET_EMAIL }}
          YOUR_SECRET_PASSWORD: ${{ secrets.YOUR_SECRET_PASSWORD }}
          YOUR_SECRET_LOGON_URL: ${{ secrets.YOUR_SECRET_LOGON_URL }}
          YOUR_SECRET_PLANNING_URL: ${{ secrets.YOUR_SECRET_PLANNING_URL }}
          YOUR_SECRET_LOGIN_URL: ${{ secrets.YOUR_SECRET_LOGIN_URL }}
          YOUR_SECRET_MY_NAME: ${{ secrets.YOUR_SECRET_MY_NAME }}
          EXECUTION_ENVIRONMENT: ${{ steps.params.outputs.environment }}
          TRIGGER_TYPE: ${{ steps.params.outputs.trigger_type }}
          JOB_DAY: ${{ steps.params.outputs.job_day }}
        with:
          runCmd: |
            python3 execution.py "${{ steps.params.outputs.date }}" "${{ steps.params.outputs.time }}"
            echo "PYTHON_EXIT_CODE=$?" >> $GITHUB_ENV
          push: never


      - name: Create success tag if registration succeeded
        if: steps.tag_check.outputs.tag_exists == 'false'

        run: |
          target_date="${{ steps.params.outputs.date }}"
          
          # Check if Python exited with code 0
          if [ "${PYTHON_EXIT_CODE:-1}" = "0" ]; then
            echo "✅ Python script succeeded (exit code 0)"
            
            # Create success tag from target_date
            tag_name="success_${target_date}"
            
            # Create empty commit for the tag
            git commit --allow-empty -m "✅ Sunday registration succeeded for ${target_date}"
            
            # Create and push tag
            git tag -a "$tag_name" -m "Sunday registration success for ${target_date} - $(date -u)"
            git push origin ${{ github.ref_name }}
            git push origin "$tag_name"
            
            echo "🏷️ Success tag created: $tag_name"
          else
            echo "❌ Python script failed (exit code: ${PYTHON_EXIT_CODE:-unknown})"
            echo "No success tag will be created"
          fi

          
  manual-registration:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.job_type == 'manual'
    runs-on: ubuntu-latest
    name: Manual Registration
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set parameters for manual run
        id: params
        run: |
          echo "date=${{ github.event.inputs.target_date }}" >> $GITHUB_OUTPUT
          echo "time=${{ github.event.inputs.target_time }}" >> $GITHUB_OUTPUT
          echo "trigger_type=manual" >> $GITHUB_OUTPUT
          echo "environment=manual-execution" >> $GITHUB_OUTPUT
          echo "job_day=manual" >> $GITHUB_OUTPUT
          
      - name: Display execution info
        run: |
          echo "🎾 Manual Pickleball Registration"
          echo "📅 Date: ${{ steps.params.outputs.date }}"
          echo "🕐 Time: ${{ steps.params.outputs.time }}"
          echo "🔄 Trigger: ${{ steps.params.outputs.trigger_type }}"
          echo "🌍 Environment: ${{ steps.params.outputs.environment }}"
          echo "👤 Initiated by: ${{ github.actor }}"
          
      - name: Run manual registration
        uses: devcontainers/ci@v0.3
        env:
          YOUR_SECRET_EMAIL: ${{ secrets.YOUR_SECRET_EMAIL }}
          YOUR_SECRET_PASSWORD: ${{ secrets.YOUR_SECRET_PASSWORD }}
          YOUR_SECRET_LOGON_URL: ${{ secrets.YOUR_SECRET_LOGON_URL }}
          YOUR_SECRET_PLANNING_URL: ${{ secrets.YOUR_SECRET_PLANNING_URL }}
          YOUR_SECRET_LOGIN_URL: ${{ secrets.YOUR_SECRET_LOGIN_URL }}
          YOUR_SECRET_MY_NAME: ${{ secrets.YOUR_SECRET_MY_NAME }}
          EXECUTION_ENVIRONMENT: ${{ steps.params.outputs.environment }}
          TRIGGER_TYPE: ${{ steps.params.outputs.trigger_type }}
          JOB_DAY: ${{ steps.params.outputs.job_day }}
          MANUAL_RUN: "true"
        with:
          runCmd: python3 execution.py "${{ steps.params.outputs.date }}" "${{ steps.params.outputs.time }}"
          push: never
